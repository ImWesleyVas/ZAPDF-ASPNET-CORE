@using X.PagedList.Mvc.Core;
@model X.PagedList.PagedList<ZAPNET.DemoFina.Models.Cosif>

@{
    ViewData["Title"] = "Index";
}

<div style="text-align:center">
    <h2><strong>PLANO COSIF</strong></h2>
</div>

<div class="container">

    <div class="col-sm-6">
        <a type="button" asp-controller="Cosif" asp-action="CadastrarConta" class="btn btn-primary">Cadastrar Conta</a>
    </div>
    <div class="col-sm-6" style="text-align:right; padding-right:50px">
        <a type="button" asp-controller="Home" asp-action="Cadastro" class="btn btn-warning" style="text-align:right">Voltar</a>
    </div>
</div>
<br />

<div class="modal-content" data-role="page">
    <table class="table" role="listbox">
        <thead>
            <tr>
                <th>
                    @*@Html.DisplayNameFor(model => model.ContaCosif)*@  <!--verificar como usar o DisplayNameFor com PagedList -->
                    Conta Cosif
                </th>
                <th>
                    @*@Html.DisplayNameFor(model => model.Descricao)*@
                    Descrição
                </th>
                <th>
                    @*@Html.DisplayNameFor(model => model.Tipo)*@
                    Tipo
                </th>
                <th>
                    @*@Html.DisplayNameFor(model => model.Natureza)*@
                    Natureza

                </th>
                <th>
                    @*@Html.DisplayNameFor(model => model.Nivel)*@
                    Nível
                </th>
                <th>
                    @*@Html.DisplayNameFor(model => model.Classe)*@
                    Classe
                </th>
                <th></th>
            </tr>
        </thead>
        @foreach (var item in Model)
        {
            <tbody>
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.ContaCosif)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Descricao)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Tipo)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Natureza)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Nivel)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Classe)
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
                        @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
                        @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
                    </td>
                </tr>
            </tbody>
        }
    </table>
    
    <!-- BLOCO DA PAGINAÇÃO-->
    <div class="row" >
        <div class="col-md-8" style="padding-left:2em">
            @Html.PagedListPager(Model, pagina => Url.Action("ListaCosif", new { pagina }))
        </div>
        <div class="col-md-4">
            <span class="pull-right" style="padding-right:2em">
                Listando registros de @Model.FirstItemOnPage a @Model.LastItemOnPage de um total de @Model.TotalItemCount
            </span>
        </div>
    </div>
    <!--FIN BLOCO PAGINAÇÃO-->

</div>
<div class="form-group" style="padding: 15px 5px 5px 5px">
    <a type="button" asp-controller="Cosif" asp-action="ImportarCosif" class="btn btn-block btn-primary">Importar Cosif</a>
</div>