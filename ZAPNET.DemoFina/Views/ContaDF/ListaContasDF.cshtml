@using X.PagedList.Mvc.Core;
@model X.PagedList.PagedList<ZAPNET.DemoFina.Models.ContaDF>
@*@model IEnumerable<ZAPNET.DemoFina.Models.ContaDF>*@

@{
    ViewData["Title"] = "ListaContasDF";

}

<div style="display:block; text-align:center">
    <h2>@Html.ViewBag.Modelo.Id - @Html.ViewBag.Modelo.Nome </h2>
</div>

<div class="container">
    <div class="col-sm-4">
        <a asp-action="AddContaDF" asp-route-id=@ViewBag.Modelo.Id class="btn btn-primary">Nova Conta</a>
    </div>
    <div class="col-sm-4 mesAno" style="text-align:center">
        <p class="lblMesAno" style="display:none">@ViewData["MesAno"]</p>
    </div>
    <div class="col-sm-4" style="text-align:right; padding-right:50px">
        <a asp-controller="ModeloDF" asp-action="ListaModelos" class="btn btn-warning">Voltar</a>
    </div>
</div>
<br />

<div class="modal-content">
    <table class="table table-condensed">
        <thead>
            <tr>
                <th>
                    Código
                </th>

                <th>
                    Rubrica
                </th>
                <th>
                    Tipo
                    @*@Html.DisplayNameFor(model => model.Tipo)*@
                </th>
                <th>
                    Natureza
                    @*@Html.DisplayNameFor(model => model.Natureza)*@
                </th>
                <th>
                    Nivel
                    @*@Html.DisplayNameFor(model => model.Nivel)*@
                </th>
                <th>
                    Classe
                    @*@Html.DisplayNameFor(model => model.Classe)*@
                </th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @if (Model != null)
            {
                @foreach (var item in Model)
                {
                    <tr class="conta-df" data-conta-df="conta-df">
                        <td>
                            @Html.DisplayFor(modelItem => item.CodigoContaDF)
                        </td>

                        <td>
                            @Html.DisplayFor(modelItem => item.Descricao)
                        </td>
                        <td class="tipoContaDF">
                            @Html.DisplayFor(modelItem => item.Tipo)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Natureza)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Nivel)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Classe)
                        </td>
                        <td style="text-align:right">
                            @Html.ActionLink("Editar", "Editar", new { /* id=item.PrimaryKey */ }, new { @class = "btn btn-primary btn-xs" })
                            @Html.ActionLink("Detalhe", "Detalhe", new { /* id=item.PrimaryKey */}, new { @class = "btn btn-warning btn-xs" })
                            @Html.ActionLink("Excluir", "ExcluiContaDF", new { id = item.Id }, new { @class = "btn btn-danger btn-xs" })
                            @*<span class="d-inline-block" tabindex="0" data-toggle="tooltip" title="Relacionar Cosif">
                                <button data-btn-rela="btn-relacionar" class = "btn btn-default glyphicon glyphicon-triangle-bottom"></button>
                            </span>*@ 
                        </td>
                        <td>
                            <span class="d-inline-block" tabindex="0" data-toggle="tooltip" title="Relacionar Cosif">
                                <button data-btn-rela="btn-relacionar" class="btn btn-default btn-xs glyphicon glyphicon-triangle-left"></button>
                            </span>
                        </td>
                    </tr>

                    <tr class="" data-add-cosif="conta-cosif">
                        <td></td>
                        <td>
                            <select style="width: 100%">
                                <option>Conta 1</option>
                                <option>Conta 2</option>
                                <option>Conta 3</option>
                            </select>
                        </td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td>
                            <button class="btn btn-primary btn-xs" ; align-content:center">Adicionar</button>
                        </td>
                        <td></td>

                    </tr>

                }
            }
        </tbody>
    </table>

    <!-- BLOCO DA PAGINAÇÃO-->
    <div class="row">
        <div class="col-md-8" style="padding-left:2em">
            @Html.PagedListPager(Model, pagina => Url.Action("ListaContasDF", new { pagina }))
        </div>
        <div class="col-md-4">
            <span class="pull-right" style="padding-right:2em">
                Listando registros de @Model.FirstItemOnPage a @Model.LastItemOnPage de um total de @Model.TotalItemCount
            </span>
        </div>
    </div>
    <!--FIN BLOCO PAGINAÇÃO-->
</div>

@section Scripts {

    <script type="module" src="~/js/conta-df.js"></script>

}